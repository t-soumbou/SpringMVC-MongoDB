/*
 * Created on 2017-03-22 ( Date ISO 2017-03-22 - Time 16:41:53 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.0.0
 */
/*
 * Created on 2017-03-22 ( Time 16:41:53 )
 * Generated by Telosys Tools Generator ( version 3.0.0 )
 */
package org.demo.persistence.impl.mongo.commons;


import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Date;

import org.bson.Document;

/**
 * 
 * @author tsoumbou
 *
 */
public class DocumentWrapper {
	
	private final Document document ;
	
	
	public DocumentWrapper() {
		super();
		this.document = new Document();
	}

	public DocumentWrapper(Document document) {
		super();
		this.document = document;
	}

	public Document getDocument() {
		return document ;
	}

	/***
	 * 
	 * @param key
	 * @return
	 */
	public Object get(final Object key) {
		return document.get(key);
	}

	
	/**
	 * 
	 * @param key
	 * @return
	 */
	public BigDecimal getBigDecimal(final String  key) {
		String s = (String) document.get(key);
		return new BigDecimal(s);
	}

	/**
	 * 
	 * @param key
	 * @return
	 */
	public Short getShort(final String  key) {
		Integer i = (Integer) document.get(key);
		return i.shortValue();
	}

	/**
	 * 
	 * @param key
	 * @return
	 */
	public Byte getByte(final String  key) {
		Integer i = (Integer) document.get(key);
		return i.byteValue();
	}

	/**
	 * 
	 * @param key
	 * @return
	 */
	public Float getFloat(final String  key) {
		Double d = (Double) document.get(key);
		return d.floatValue();
	}

	/**
	 * 
	 * @param key
	 * @param value
	 * @return
	 */
	public void appendBigDecimal(final String key, final Object value) {
		document.append(key, value.toString());
	}

//	/**
//	 * 
//	 * @param key
//	 * @return
//	 */
//	public BigInteger getBigInteger(final String  key) {
//		String s = (String) document.get(key);
//		return new BigInteger(s);
//	}
//
//	/**
//	 * 
//	 * @param key
//	 * @param value
//	 * @return
//	 */
//	public void appendBigInteger(final String key, final BigInteger value) {
//		document.append(key, value.toString());
//	}

	/**
	 * 
	 * @param key
	 * @param value
	 * @return
	 */
public void append(final String key, final Object value) {
		if(value instanceof BigDecimal || value instanceof BigInteger){
			document.append(key, value.toString());
		}else{
		document.append(key, value );
		}
	}
	/**
	 * 
	 * @param string
	 * @return
	 */
	public String getString(final String string) {
		return document.getString(string);
	}
	/**
	 * 
	 * @param string
	 * @return
	 */
	public Integer getInteger(final String string) {
		return document.getInteger(string);
	}
	/**
	 * 
	 * @param string
	 * @return
	 */
	public Double getDouble(final String string) {
		return document.getDouble(string);
	}
	/**
	 * 
	 * @param string
	 * @return
	 */
	public Long getLong(String string) {
		return document.getLong(string);
	}
	/**
	 * 
	 * @param string
	 * @return
	 */
	public boolean getBoolean(String string) {
		return document.getBoolean(string);
	}
	/**
	 * 
	 * @param string
	 * @return
	 */
	public Date getDate(String string) {
		return document.getDate(string);
	}
}
