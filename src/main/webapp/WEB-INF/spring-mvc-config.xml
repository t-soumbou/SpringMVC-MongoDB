<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd">

<!-- File generated by Telosys Tools Generator ( version 3.0.0 ) - Date 2017-03-22 ( Time 16:30:54 ) -->

 	<!-- Where to search the web controllers -->
	<context:component-scan base-package="org.demo.web.mvc.spring.controller" />

 	<!-- Where to search the "message helper", etc -->
	<context:component-scan base-package="org.demo.web.mvc.spring.commons" />

 	<!-- Where to search the persistence services implementations -->
 	<context:component-scan base-package="org.demo.persistence.impl" />

	<mvc:annotation-driven />
<!--  	
 	<mvc:annotation-driven conversion-service="applicationConversionService"/>
	<bean id="applicationConversionService" class="org.demo.web.convert.ConversionServiceFactoryBean"/>
 -->
	
 	<!-- Path for static resources  -->
 <!-- 
 	<mvc:resources mapping="/static/**"  location="/static/" />
  -->
<!-- 
	<mvc:resources mapping="/script/**"  location="/script/" />
 -->
 	<mvc:resources mapping="/css/**"     location="/css/"    />
 	<mvc:resources mapping="/fonts/**"   location="/fonts/"    />
	<mvc:resources mapping="/images/**"  location="/images/" />
	<mvc:resources mapping="/js/**"      location="/js/" />
 
 	<!-- 
	<bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix"    value="/WEB-INF/jsp/" />
		<property name="suffix"    value=".jsp" />
	</bean>
 	 -->

	<!-- Second "View Resolver" (after "Tiles") -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix"    value="/WEB-INF/views/" />
		<property name="suffix"    value=".jspx" />
		<property name="order"     value="2" />  <!-- Second position (after "Tiles") -->
	</bean>


    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources -->
    <mvc:resources location="/, classpath:/META-INF/web-resources/" mapping="/resources/**"/>
	
<!-- 	<mvc:default-servlet-handler/>
 -->

	<!-- Selects a static view for rendering without the need for an explicit controller -->
    <mvc:view-controller path="/" view-name="index"/>
    <mvc:view-controller path="/uncaughtException"/>
    <mvc:view-controller path="/resourceNotFound"/>
    <mvc:view-controller path="/dataAccessFailure"/>
	
    <!-- This bean resolves specific types of exceptions to corresponding logical - view names for error views. 
    The default behaviour of DispatcherServlet - is to propagate all exceptions to the servlet 
    container: this will happen - here with all other types of exceptions. -->
    <!-- 
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver" p:defaultErrorView="uncaughtException">
        <property name="exceptionMappings">
            <props>
                <prop key=".DataAccessException">dataAccessFailure</prop>
                <prop key=".NoSuchRequestHandlingMethodException">resourceNotFound</prop>
                <prop key=".TypeMismatchException">resourceNotFound</prop>
                <prop key=".MissingServletRequestParameterException">resourceNotFound</prop>
            </props>
        </property>
    </bean>
     -->
    
	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="lang"/>
		</bean>
	</mvc:interceptors>

	<!-- Tiles 3  "Configurer" ( see http://www.codingpedia.org/ama/spring-mvc-and-apache-tiles-integration-example/ )-->
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/layouts/layouts.xml</value>
				<value>/WEB-INF/views/**/views.xml</value>
			</list>
			</property>
	</bean>
	<!-- Tiles 3  "View Resolver" (must be the first "View Resolver")-->
	<!-- see http://stackoverflow.com/questions/18215402/spring-mvc-with-multiple-view-resolvers  -->
	<bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
 		<property name="order" value="1" />
 	</bean>	
	
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="cookieName" value="en_US"/>
	</bean>
	
	<!-- Application Message Bundle -->
	<!-- Basic 'message source' ( not reloadable dynamically ) -->
	<!-- For reloadable messages use 'org.springframework.context.support.ReloadableResourceBundleMessageSource' -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>classpath:messages</value>
                	<value>classpath:messagesAuthor</value>
                	<value>classpath:messagesBadge</value>
                	<value>classpath:messagesBook</value>
                	<value>classpath:messagesBookOrder</value>
                	<value>classpath:messagesBookOrderItem</value>
                	<value>classpath:messagesCountry</value>
                	<value>classpath:messagesCustomer</value>
                	<value>classpath:messagesEmployee</value>
                	<value>classpath:messagesEmployeeGroup</value>
                	<value>classpath:messagesPublisher</value>
                	<value>classpath:messagesReview</value>
                	<value>classpath:messagesShop</value>
                	<value>classpath:messagesSynopsis</value>
                	<value>classpath:messagesWorkgroup</value>
            </list>
        </property>
        <property name="defaultEncoding" value="UTF-8"/>
     </bean>



</beans>